{"version":3,"sources":["App.module.css","components/Form/Form.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","redux/reducer.js","data/data.js","redux/slice.js","redux/store.js","components/Form/Form.jsx","redux/actions.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","App.jsx","index.js"],"names":["module","exports","initialState","id","name","number","contactReducer","createReducer","addContact","state","payload","removeContact","filter","contact","filterReducer","handleInputChange","_","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","body","phone","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","contactsAllReducer","combineReducers","items","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","Form","addContactToBase","isLoading","useState","setName","setNumber","data","event","currentTarget","value","onSubmit","obj","preventDefault","some","toLowerCase","alert","type","pattern","required","onChange","className","s","button","disabled","createAction","filterContactAction","Filter","dispatch","useDispatch","Contact","isDeleting","item","style","textAlign","onClick","ContactList","useSelector","isFetching","allContacts","normalizedFilter","includes","getVisibleContacts","map","Container","children","container","App","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.395d34ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"App_contactsTitle__22st7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__2ZPiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1f9Cq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container___gcpE\"};","import { createReducer } from '@reduxjs/toolkit';\r\nimport { data } from '../data/data';\r\n\r\nconst initialState = [...data];\r\n\r\nexport const contactReducer = createReducer(initialState, {\r\n  addContact: (state, { payload }) => [...state, payload],\r\n  removeContact: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  handleInputChange: (_, { payload }) => payload,\r\n});\r\n\r\n//------------------- Without Redux Toolkit--------------------------\r\n\r\n// import { combineReducers } from 'redux';\r\n// import { data } from '../data/data';\r\n// import { ADD, REMOVE, FILTER } from './types';\r\n\r\n// const initialState = [...data];\r\n\r\n// const contactReducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n\r\n//     case REMOVE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = combineReducers({\r\n//   items: contactReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// export default rootReducer;\r\n\r\n//-------------------------------------------------------------------\r\n","export let data = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  tagTypes: ['Contacts'],\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://619826b0164fa60017c22f8a.mockapi.io/' }),\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => 'contacts',\r\n      providesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: contact => ({\r\n        url: 'contacts',\r\n        method: 'POST',\r\n        body: {\r\n          name: contact.name,\r\n          phone: contact.phone,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useFetchContactsQuery, useDeleteContactMutation, useAddContactMutation } =\r\n  contactsApi;\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { contactReducer, filterReducer } from './reducer';\r\nimport { contactsApi } from './slice';\r\n\r\nconst contactsAllReducer = combineReducers({\r\n  items: contactReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsAllReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware],\r\n});\r\n","import { useState } from 'react';\r\nimport s from './Form.module.css';\r\nimport { useFetchContactsQuery, useAddContactMutation } from '../../redux/slice';\r\nimport LoaderDots from '../Loader';\r\n\r\nexport default function Form() {\r\n  const [addContactToBase, { isLoading }] = useAddContactMutation();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const { data } = useFetchContactsQuery();\r\n\r\n  // console.log(isLoading);\r\n\r\n  const addContact = obj => {\r\n    if (data.some(contact => contact.name.toLowerCase() === obj.name.toLowerCase())) {\r\n      alert(`You have already had ${obj.name} in your contacts`);\r\n      return;\r\n    }\r\n\r\n    addContactToBase(obj);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSubmite = event => {\r\n    event.preventDefault();\r\n    addContact({ name: name, phone: number });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmite}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button} disabled={isLoading}>\r\n          {/* {isLoading && <LoaderDots />} */}\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactAction = createAction('addContact');\r\nexport const removeContactAction = createAction('removeContact');\r\nexport const filterContactAction = createAction('handleInputChange');\r\n\r\n//------------------- Without Redux Toolkit----------------------------------\r\n\r\n// import { ADD, REMOVE, FILTER } from './types';\r\n\r\n// export const addContactAction = payload => ({ type: ADD, payload });\r\n// export const removeContactAction = payload => ({ type: REMOVE, payload });\r\n// export const filterContactAction = payload => ({ type: FILTER, payload });\r\n\r\n//----------------------------------------------------------------------------\r\n","import { useDispatch } from 'react-redux';\r\nimport { filterContactAction } from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const filterContacts = event => {\r\n    dispatch(filterContactAction(event.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <p>Find contacts by name:</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        onChange={filterContacts}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nimport { useDeleteContactMutation } from '../../redux/slice';\r\n\r\nexport default function Contact({ contact }) {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      {contact.name}: <span style={{ textAlign: 'right' }}>{contact.phone}</span>{' '}\r\n      <button onClick={() => deleteContact(contact.id)} disabled={isDeleting}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  concact: PropTypes.string,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport Contact from '../Contact';\r\nimport { useFetchContactsQuery } from '../../redux/slice';\r\nimport LoaderDots from '../Loader';\r\n\r\nexport default function ContactList() {\r\n  const { filter } = useSelector(state => state.contacts);\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  // console.log(data.id);\r\n\r\n  const getVisibleContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const visibleContacts = allContacts\r\n      ? allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n      : [];\r\n    return visibleContacts;\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {getVisibleContacts(data, filter).map(contact => (\r\n        <Contact key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children} </div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import s from './App.module.css';\r\nimport Form from './components/Form';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Container from './components/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.contactsTitle}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App.jsx';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}